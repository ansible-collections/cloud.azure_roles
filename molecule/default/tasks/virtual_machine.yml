---
- name: define resource group name
  set_fact:
    resource_group: "test-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"
    azure_tags:
      cloud.azure_roles: virtual_machine

- name: define virtual machine variables
  set_fact:
    azure_resource_group: "{{ resource_group }}"
    azure_region: 'canadacentral'
    azure_vm_name: "{{ resource_group }}-vm"
    azure_vm_size: 'Standard_DS1_v2'
    azure_vm_os_type: 'Linux'
    azure_vm_admin_username: 'azureuser'
    azure_vm_admin_password: '4fB5In3ueO7,'
    azure_availability_set_name: "{{ resource_group }}-as"
    azure_vm_image:
      offer: RHEL
      publisher: RedHat
      sku: "7-LVM"
      version: latest

- name: test invalid creation of virtual machine
  ignore_errors: yes
  block:
    - name: test if virtual machine was created with no vnet or nic (should fail)
      include_role:
        name: virtual_machine
      vars:
        operation: "create"

    - azure_rm_virtualmachine_info:
        resource_group: '{{ azure_resource_group }}'
      register: vm_info

    - name: assert that VM was not created
      assert:
        that:
          - vm_info.vms | length == 0
      ignore_errors: no

    - name: get resource group info
      azure_rm_resourcegroup_info:
        name: '{{ azure_resource_group }}'
      register: rg
      ignore_errors: no

    - name: assert that resource group was created
      assert:
        that:
          - rg.resourcegroups | length == 1
      ignore_errors: no

    - name: delete resource group
      azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        state: absent
        force_delete_nonempty: yes
      ignore_errors: no

    - name: Get resource group info
      azure_rm_resourcegroup_info:
        name: '{{ azure_resource_group }}'
      register: resource
      ignore_errors: no

    - name: Assert that resource group is deleted
      assert:
        that:
          - resource.resourcegroups | length == 0  
      ignore_errors: no

- name: Test valid creation of virtual machine
  block:
    - name: Define virtual network variables
      set_fact:
        azure_virtual_network: "{{ resource_group }}-vnet-00"
        azure_subnet: "{{ resource_group }}-subnet-00"
        azure_vnet_address_prefixes_cidr:
          - 10.16.0.0/16
        azure_subnet_address_prefixes_cidr: 10.16.0.0/24        

    - name: Create virtual network
      include_role:
        name: networking_stack
      vars:
        operation: 'create'

    - name: Create virtual machine
      include_role:
        name: virtual_machine
      vars:
        operation: "create"

    - name: Get resource group info
      azure_rm_resourcegroup_info:
        name: '{{ azure_resource_group }}'
      register: rg

    - name: Assert that resource group was created
      assert:
        that:
          - rg.resourcegroups | length == 1

    - name: Assert that VM was successfully created      
      azure_rm_virtualmachine_info:
        resource_group: '{{ azure_resource_group }}'
      register: vm_info

    - assert:
        that:
          - vm_info.vms | length == 1

    - name: Delete virtual machine
      include_role:
        name: virtual_machine
      vars:
        operation: 'delete'

    - name: Assert resource group still exists
      azure_rm_resourcegroup_info:
        name: '{{ azure_resource_group }}'
      register: rg

    - assert:
        that:
          - rg.resourcegroups | length == 1

    - name: Assert that VM was deleted      
      azure_rm_virtualmachine_info:
        resource_group: '{{ azure_resource_group }}'
      register: vm_info

    - assert:
        that:
          - vm_info.vms | length == 0

    - name: Delete resource group
      azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        state: absent
        force_delete_nonempty: yes
      ignore_errors: no

    - name: Get resource group info
      azure_rm_resourcegroup_info:
        name: '{{ azure_resource_group }}'
      register: resource

    - name: Assert that resource group is deleted
      assert:
        that:
          - resource.resourcegroups | length == 0            

  always:
    - name: Delete resource group
      azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        state: absent
        force_delete_nonempty: yes
      ignore_errors: yes
