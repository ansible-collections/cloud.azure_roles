---
- name: Define resource group name
  set_fact:
    resource_group: "test-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=6') }}"
    azure_tags:
      cloud.azure_roles: load_balancer

- name: Define region
  set_fact:
    azure_resource_group: "{{ resource_group }}"
    azure_region: 'canadacentral'

- name: Test load balancer role
  block:
    - name: Test invalid creation of load balancer (no name)
      block:
        - name: Create load balancer
          import_role:
            name: load_balancer
      rescue:
        - debug:
            msg: "Failed when attempting to create a load balancer with no name. Continue..."

    - name: Test creation of load balancer with all defaults
      block:
        - name: Create load balancer
          include_role:
            name: load_balancer
          vars:
            operation: "create"
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created with defaults
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ azure_resource_group }}-lb-public-ip')
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"

        - name: Assert resource group still exists
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom public ip
      block:
        - name: Create load balancer with public ip specified
          include_role:
            name: load_balancer
          vars:
            operation: "create"
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"
              public_ip_name: 'testinput'

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created with public IP input
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('testinput')
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom domain name
      block:
        - name: Create load balancer
          include_role:
            name: load_balancer
          vars:
            operation: "create"
            azure_load_balancer:
              domain_name: "{{ azure_resource_group  | replace('_', '-')  }}-{{ azure_region  | replace('_', '-')  }}-lb"
              name: "{{ azure_resource_group }}-lb"

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Get lb's public ip info
          azure_rm_resource_info:
            url: "{{ lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id }}"
          register: pip

        - name: Assert that load balancer was successfully created & domain name was assigned to public ip
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - pip.response[0].properties.dnsSettings.fqdn == '{{ azure_resource_group  | replace('_', '-')  }}-{{ azure_region  | replace('_', '-')  }}-lb.canadacentral.cloudapp.azure.com'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ azure_resource_group }}-lb-public-ip')
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom frontend ip conf
      block:
        - name: Create load balancer with custom frontend ip conf
          include_role:
            name: load_balancer
          vars:
            operation: "create"
            azure_load_balancer:
              frontend_ip_configurations:
                - name: "{{ azure_resource_group }}-frontend"
                  public_ip_address: "{{ azure_resource_group }}-lb-public-ip"
              name: "{{ azure_resource_group }}-lb"

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created with input frontend ip configurations
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == '{{ azure_resource_group }}-frontend'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ azure_resource_group }}-lb-public-ip')

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom backend address pool
      block:
        - name: Create load balancer with backend address pool input
          include_role:
            name: load_balancer
          vars:
            operation: "create"
            azure_load_balancer:
              backend_address_pools:
                - name: "{{ azure_resource_group }}-vm-pool"
              name: "{{ azure_resource_group }}-lb"

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created with input backend address pool
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == '{{ azure_resource_group }}-vm-pool'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ azure_resource_group }}-lb-public-ip')

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'
            azure_load_balancer:
              name: "{{ azure_resource_group }}-lb"

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

  always:
    - name: Delete resource group
      azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        state: absent
        force_delete_nonempty: yes
      ignore_errors: yes
