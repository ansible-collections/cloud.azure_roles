---
- name: define resource group name
  set_fact:
    resource_group: "test-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=6') }}"
    azure_tags:
      cloud.azure_roles: load_balancer

- name: define load balancer variables
  set_fact:
    azure_resource_group: "{{ resource_group }}"
    azure_region: 'canadacentral'
    azure_lb_name: "{{ resource_group }}-lb"

- name: Test load balancer role
  block:
    - name: Test valid creation of load balancer with no public ip specified
      block:
        - name: Create load balancer
          include_role:
            name: load_balancer
          vars:
            operation: "create"

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created & a public IP was assigned
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress is not none

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'

        - name: Assert resource group still exists
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test valid creation of load balancer with public ip specified
      block:
        - name: Set public IP name
          set_fact:
            azure_lb_pip_name: 'testinput'

        - name: Create load balancer
          include_role:
            name: load_balancer
          vars:
            operation: "create"

        - name: Get resource group info
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - name: Assert that resource group was created
          assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created & a public IP was assigned
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - azure_lb_pip_name in lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id

        - name: Delete load balancer
          include_role:
            name: load_balancer
          vars:
            operation: 'delete'

        - name: Assert resource group still exists
          azure_rm_resourcegroup_info:
            name: '{{ azure_resource_group }}'
          register: rg

        - assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Assert that load balancer was deleted
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test adding NICs to load balancer
      block:
        - name: Set networking variables to create NICs
          set_fact:
            azure_lb_network_interface_instances:
              - "{{ resource_group }}-nic1"
              - "{{ resource_group }}-nic2"
              - "{{ resource_group }}-nic3"
            azure_virtual_network: "{{ resource_group }}-vnet-00"
            azure_subnet: "{{ resource_group }}-subnet-00"
            azure_vnet_address_prefixes_cidr:
              - 10.16.0.0/16
            azure_subnet_address_prefixes_cidr: 10.16.0.0/24

        - name: Create load balancer with supplied nics attached
          include_role:
            name: load_balancer
          vars:
            operation: "create"

        - name: Get lb info
          azure_rm_loadbalancer_info:
            resource_group: '{{ azure_resource_group }}'
          register: lb_info

        - name: Assert that load balancer was successfully created & nics were attached
          assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - "{{ lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].properties.backendIPConfigurations | length == ( azure_lb_network_interface_instances | length ) }}"
    
  always:
    - name: Delete resource group
      azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        state: absent
        force_delete_nonempty: yes
      ignore_errors: yes
