---
- hosts: localhost
  gather_facts: no
  vars_files:
  - vars/main.yml
  roles:
    # - role: resource_group
    # - role: networking_stack
    # - role: security_group
    # - role: load_balancer
    # - role: public_ip    
    # - role: network_interface
    # - role: availability_set
    # - role: virtual_machine
    # - role: managed_postgresql
  tasks:
    - name: Create resource group
      include_role:
        name: resource_group

    - name: Create networking stack
      include_role:
        name: networking_stack

    # - name: Create network interface(s) with respective dependent resources
    #   include_role:
    #     name: network_interface
    #   with_items: "{{ azure_network_interfaces }}"
    #   loop_control:
    #     loop_var: azure_network_interface

    # - name: Create availability set
    #   include_role:
    #     name: availability_set

    - name: Create virtual machines
      include_role:
        name: virtual_machine
      loop: "{{ range(0, azure_vm_replicas ) | list }}"
      loop_control:
        index_var: idx

    # - name: Create load balancer
    #   include_role:
    #     name: load_balancer        

- hosts: in_memory
  gather_facts: no
  become_user: "{{ azure_vm_admin_user }}"
  vars_files:
    - vars/main.yml

  # https://stackoverflow.com/questions/32297456/how-to-ignore-ansible-ssh-authenticity-checking
  tasks:
  - name: Check SSH known_hosts for {{ inventory_hostname }}
    local_action: shell ssh-keygen -F {{ inventory_hostname }}
    register: checkForKnownHostsEntry
    failed_when: false
    changed_when: false
    ignore_errors: no

  - name: Add {{ inventory_hostname }} to SSH known hosts automatically
    when: checkForKnownHostsEntry.rc == 1
    changed_when: checkForKnownHostsEntry.rc == 1
    set_fact:
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no'  

  - name: Create test file
    copy:
      dest: /tmp/test
      content: "Hello from {{ inventory_hostname }}!"
